import os
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import types

from bot import dp, bot
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä –∏–∑ —Ñ–∞–π–ª–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
from vacancy.manager import manager_router
from vacancy.accountant import accountant_router

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
start_inline_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        # [InlineKeyboardButton(text="–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ WB", callback_data="vacancy_manager")],
        [InlineKeyboardButton(text="–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≥–ª–∞–≤–Ω–æ–≥–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞", callback_data="vacancy_accountant")]
    ]
)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command('start'))
async def send_welcome(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–ú—ã –∏—â–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥—É –±—Ä–µ–Ω–¥–∞ MissYourKiss\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–∫–∞–Ω—Å–∏—é –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è:",
        reply_markup=start_inline_keyboard
    )


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
dp.include_router(accountant_router)
dp.include_router(manager_router)


# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
ADMIN_IDS = [615742233]


# –í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã /send
@dp.message(Command('send'))
async def send_to_user(message: types.Message):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
        return

    try:
        # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å —É—á–µ—Ç–æ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        args = message.text.split(maxsplit=2)
        user_id = int(args[1])
        raw_text = args[2]

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        text = raw_text.replace('\\n', '\n').replace('\\t', '\t')

        await bot.send_message(chat_id=user_id, text=text)
        await message.answer(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

    except IndexError:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã\n–ü—Ä–∏–º–µ—Ä: /send 123456 –ü—Ä–∏–≤–µ—Ç\\n–ö–∞–∫ –¥–µ–ª–∞?")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


# –î–æ–±–∞–≤—å—Ç–µ –≤—ã–∑–æ–≤ –≤ main()
async def main():
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == '__main__':
    import asyncio

    asyncio.run(main())
